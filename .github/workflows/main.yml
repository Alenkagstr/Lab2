name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - development
      - release
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout репозиторий
        uses: actions/checkout@v4
      
      - name: Установка Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      
      - name: Установка зависимостей
        run: |
          python -m pip install --upgrade pip
          pip install pytest  # Устанавливаем тестовый фреймворк
         
      - name: Запуск калькулятора +
        run: python Calc.py 5 + 4
      
      - name: Запуск калькулятора -
        run: python Calc.py 6 - 4

      - name: Запуск калькулятора /
        run: python Calc.py 30 / 5
  
      - name: Запуск тестов
        run: pytest test_calc.py
        
  create_pull_request:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout репозитория
        uses: actions/checkout@v4
      
      - name: Создание Pull Request
        uses: Alenkagstr/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: development
          base: main
          title: 'Автоматическое слияние изменений из development в main'
          body: 'Этот PR содержит последние исправления и обновления.'
          labels: 'авто-слияние'
          draft: false

  merge_pull_request:
    needs: create_pull_request
    runs-on: ubuntu-latest
    steps:
      - name: Автоматическое слияние PR при успешных тестах
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pulls } = await github.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: 'development'
            });

            if (pulls.length > 0) {
              await github.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pulls[0].number,
                merge_method: 'squash'
              });
            }

  release:
    needs: merge_pull_request
    runs-on: ubuntu-latest
    steps:
      - name: Checkout репозитория
        uses: actions/checkout@v4
      
      - name: Создание нового тега версии
        run: |
          VERSION=\"v1.0.$(date +%s)\"
          git tag $VERSION
          git push origin $VERSION

  generate_docs:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout репозитория
        uses: actions/checkout@v4
      
      - name: Генерация документации
        run: |
          mkdir -p docs
          echo "# Документация" > docs/README.md
          echo "Этот проект является калькулятором на Python." >> docs/README.md
      
      - name: Коммит документации
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add docs/README.md
          git commit -m 'Автоматическое обновление документации'
          git push
